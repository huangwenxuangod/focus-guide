---
alwaysApply: true
---
# 专注引导 MVP 开发规则

## 🎯 唯一目标
验证"温和引导 > 强制阻止"假设

## ✅ 4个核心功能 (不可增减)
1. **监控5个预设应用** - 微信/抖音/游戏/购物/微博
2. **显示3个替代活动** - 深呼吸/喝水/伸展  
3. **简单开关设置** - 开启/关闭监控
4. **权限引导流程** - 一键设置必要权限

## 🚫 绝对禁止
- 推荐算法
- 云端同步
- 社区功能
- 详细统计
- 自定义功能
- 多主题
- 复杂设置

## 🔧 技术栈 (固定)
```
Flutter 3.x
Provider (状态管理)
Hive (本地数据库)
SharedPreferences (设置存储)
Material 3 (UI设计)
```

## 📱 页面架构 (固定3个页面)
1. **主页** - 开关控制 + 今日统计
2. **设置页** - 应用选择 + 权限状态
3. **引导页** - 替代活动选择

## 🚨 开发铁律

### 功能铁律
- **严格4个功能**: 多1个都是失败
- **操作≤2步**: 超过即重构
- **启动<3秒**: 超时即优化
- **页面≤3个**: 增加即违规

### 代码铁律
- **函数<50行**: 超长即拆分
- **async必try-catch**: 无异常处理即报错
- **核心功能必测试**: 无测试不合并
- **变量命名清晰**: 模糊命名即重构

### 性能铁律
- **崩溃率<1%**: 超标即修复
- **内存无泄漏**: 发现即处理
- **动画60fps**: 卡顿即优化
- **后台轻量**: 耗电即精简

## ⏱️ 3周开发计划
```
第1周: 框架搭建 + 应用检测 + 基础UI
第2周: 引导页面 + 替代活动 + 权限流程
第3周: 性能优化 + 测试修复 + 发布准备
```

## 📊 验证指标
- 7天留存 > 50%
- 活动点击 > 30%
- 完成设置 > 80%

## 🎯 必须验证
- [ ] 用户理解引导概念
- [ ] 替代活动被实际使用
- [ ] 技术方案稳定可行
- [ ] 权限流程用户可完成

## 📝 Git规范
- 分支: `feature/功能名`
- 提交: `type: description`
- 必须代码review
- 主分支随时可发布

---

**极简原则**: 专注验证核心假设，快速获得用户反馈
**成功标准**: 用户接受引导概念且愿意持续使用
**失败标准**: 功能超出4个或开发超过3周